name: Autograding Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Testes automatizados
      - name: Deve registrar entrada de carro
        id: registrar-entrada-carro
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve registrar entrada de carro
          command: gradle test --tests 'EstacionamentoTest.deveRegistrarEntradaDeCarro'
          timeout: 10
          max-score: 5

      - name: Deve registrar entrada de moto e bike
        id: registrar-entrada-moto-bike
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve registrar entrada de moto e bike
          command: gradle test --tests 'EstacionamentoTest.deveRegistrarEntradaDeMotoEBike'
          timeout: 10
          max-score: 5

      - name: Não deve permitir veículos duplicados
        id: nao-permitir-veiculos-duplicados
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Não deve permitir veículos duplicados
          command: gradle test --tests 'EstacionamentoTest.naoDevePermitirVeiculosDuplicados'
          timeout: 10
          max-score: 5

      - name: Não deve registrar entrada quando estacionamento lotado
        id: estacionamento-lotado
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Não deve registrar entrada quando estacionamento lotado
          command: gradle test --tests 'EstacionamentoTest.naoDeveRegistrarEntradaQuandoEstacionamentoLotado'
          timeout: 10
          max-score: 5

      - name: Deve calcular valor de moto com mínimo de 3 reais
        id: calcular-valor-moto
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve calcular valor de moto com mínimo de 3 reais
          command: gradle test --tests 'EstacionamentoTest.deveCalcularValorDeMotoComMinimoDe3Reais'
          timeout: 10
          max-score: 5

      - name: Deve calcular valor de carro com mínimo de 5 reais
        id: calcular-valor-carro
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve calcular valor de carro com mínimo de 5 reais
          command: gradle test --tests 'EstacionamentoTest.deveCalcularValorDeCarroComMinimoDe5Reais'
          timeout: 10
          max-score: 5

      - name: Deve liberar vaga após pagamento
        id: liberar-vaga-pagamento
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve liberar vaga após pagamento
          command: gradle test --tests 'EstacionamentoTest.deveLiberarVagaAposPagamento'
          timeout: 10
          max-score: 5

      - name: Deve listar veículos estacionados
        id: listar-veiculos
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve listar veículos estacionados
          command: gradle test --tests 'EstacionamentoTest.deveListarVeiculosEstacionados'
          timeout: 10
          max-score: 5

      - name: Deve registrar saída e calcular valor corretamente
        id: registrar-saida-calculo
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve registrar saída e calcular valor corretamente
          command: gradle test --tests 'EstacionamentoTest.deveRegistrarSaidaECalcularValorCorretamente'
          timeout: 10
          max-score: 5

      - name: Não deve permitir pagamento de ticket inexistente
        id: pagamento-ticket-inexistente
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Não deve permitir pagamento de ticket inexistente
          command: gradle test --tests 'EstacionamentoTest.naoDevePermitirPagamentoDeTicketInexistente'
          timeout: 10
          max-score: 5

      - name: Não deve permitir registrar saída já paga
        id: nao-permitir-saida-paga
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Não deve permitir registrar saída já paga
          command: gradle test --tests 'EstacionamentoTest.naoDevePermitirRegistrarSaidaJaPago'
          timeout: 10
          max-score: 5

      - name: Deve poder voltar após pagamento
        id: poder-voltar-apos-pagamento
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve poder voltar após pagamento
          command: gradle test --tests 'EstacionamentoTest.devePoderVoltarAposPagamento'
          timeout: 10
          max-score: 5

      - name: Deve calcular valor para carros com permanência longa
        id: calcular-valor-permanencia-longa
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve calcular valor para bikes com permanência longa
          command: gradle test --tests 'EstacionamentoTest.deveCalcularValorParaBikesComPermanenciaLonga'
          timeout: 10
          max-score: 5

      - name: Deve calcular valor para motos com permanência curta
        id: calcular-valor-permanencia-curta
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve calcular valor para motos com permanência curta
          command: gradle test --tests 'EstacionamentoTest.deveCalcularValorParaMotosComPermanenciaCurta'
          timeout: 10
          max-score: 5

      - name: Deve impedir registrar entrada de veículos quando estacionamento lotado
        id: impedir-entrada-lotado
        uses: classroom-resources/autograding-command-grader@v1
        with:
          test-name: Deve impedir registrar entrada de veículos quando estacionamento lotado
          command: gradle test --tests 'EstacionamentoTest.deveImpedirRegistrarEntradaDeVeiculosQuandoEstacionamentoLotado'
          timeout: 10
          max-score: 5

      # Relatório final
      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          REGISTRAR-ENTRADA-CARRO_RESULTS: "${{steps.registrar-entrada-carro.outputs.result}}"
          REGISTRAR-ENTRADA-MOTO-BIKE_RESULTS: "${{steps.registrar-entrada-moto-bike.outputs.result}}"
          NAO-PERMITIR-VEICULOS-DUPLICADOS_RESULTS: "${{steps.nao-permitir-veiculos-duplicados.outputs.result}}"
          ESTACIONAMENTO-LOTADO_RESULTS: "${{steps.estacionamento-lotado.outputs.result}}"
          CALCULAR-VALOR-MOTO_RESULTS: "${{steps.calcular-valor-moto.outputs.result}}"
          CALCULAR-VALOR-CARRO_RESULTS: "${{steps.calcular-valor-carro.outputs.result}}"
          LIBERAR-VAGA-PAGAMENTO_RESULTS: "${{steps.liberar-vaga-pagamento.outputs.result}}"
          LISTAR-VEICULOS_RESULTS: "${{steps.listar-veiculos.outputs.result}}"
          REGISTRAR-SAIDA-CALCULO_RESULTS: "${{steps.registrar-saida-calculo.outputs.result}}"
          PAGAMENTO-TICKET-INEXISTENTE_RESULTS: "${{steps.pagamento-ticket-inexistente.outputs.result}}"
          NAO-PERMITIR-SAIDA-PAGA_RESULTS: "${{steps.nao-permitir-saida-paga.outputs.result}}"
          PODER-VOLTAR-APOS-PAGAMENTO_RESULTS: "${{steps.poder-voltar-apos-pagamento.outputs.result}}"
          CALCULAR-VALOR-PERMANENCIA-LONGA_RESULTS: "${{steps.calcular-valor-permanencia-longa.outputs.result}}"
          CALCULAR-VALOR-PERMANENCIA-CURTA_RESULTS: "${{steps.calcular-valor-permanencia-curta.outputs.result}}"
          IMPEDIR-ENTRADA-LOTADO_RESULTS: "${{steps.impedir-entrada-lotado.outputs.result}}"
        with:
          runners: registrar-entrada-carro,registrar-entrada-moto-bike,nao-permitir-veiculos-duplicados,estacionamento-lotado,calcular-valor-moto,calcular-valor-carro,liberar-vaga-pagamento,listar-veiculos,registrar-saida-calculo,pagamento-ticket-inexistente,nao-permitir-saida-paga,poder-voltar-apos-pagamento,calcular-valor-permanencia-longa,calcular-valor-permanencia-curta,impedir-entrada-lotado
